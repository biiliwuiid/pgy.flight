apply plugin: 'com.android.application'

def getGitCommitCountInCurrentBranch() {
    def cmd = 'git rev-list HEAD --count'
    cmd.execute().text.trim().toInteger()
}

def STORE_FILE, KEY_ALIAS, STORE_PASSWORD, KEY_PASSWORD
File localConfig = file('local/config.properties')
if (localConfig.exists()) {
    Properties configProperties = new Properties()
    configProperties.load(new FileInputStream(localConfig))

    STORE_FILE = 'local/mojiweather2.keystore'
    KEY_ALIAS = configProperties['KEY_ALIAS']
    STORE_PASSWORD = configProperties['KEY_STORE_PASSWORD']
    KEY_PASSWORD = configProperties['KEY_PASSWORD']
} else {
    STORE_FILE = 'debug.keystore'
    KEY_ALIAS = 'androiddebugkey'
    STORE_PASSWORD = 'android'
    KEY_PASSWORD = 'android'
}


android {
    compileSdkVersion "$rootProject.compileSdkVersion".toInteger()
    buildToolsVersion "$rootProject.buildToolsVersion"

    defaultConfig {
        applicationId 'com.moji.daypack'
        minSdkVersion "$rootProject.minSdkVersion".toInteger()
        targetSdkVersion "$rootProject.targetSdkVersion".toInteger()
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName
    }

    signingConfigs {
        release {
            storeFile file("$STORE_FILE")
            keyAlias "$KEY_ALIAS"
            storePassword "$STORE_PASSWORD"
            keyPassword "$KEY_PASSWORD"
        }

    }

    lintOptions {
        disable 'InvalidPackage'
        abortOnError false
    }

    packagingOptions {
        exclude 'META-INF/services/javax.annotation.processing.Processor'
    }

    sourceSets {
        main {
            res.srcDirs = [
                    'src/main/res-common-dialog/',
                    'src/main/res/'
            ]
        }
    }

    buildTypes {
        debug {
            versionNameSuffix '(Debug)'
        }

        release {
            //minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
        beta {
            applicationIdSuffix '.beta'
            versionNameSuffix '(Beta)'
            signingConfig signingConfigs.release
        }
    }

    applicationVariants.all { variant ->
        //版本号自增长
        def baseValue = 108
        variant.mergedFlavor.versionCode = baseValue+getGitCommitCountInCurrentBranch()
    }

}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])

    testCompile libs.junit

    compile libs.support_v4
    compile libs.appcompat_v7
    compile libs.material_design
    compile libs.recyclerview_v7
    compile libs.cardview_v7
    compile libs.palette
    compile libs.customtabs

    compile libs.rxjava
    compile libs.rxandroid

    compile libs.glide

    compile libs.butterknife

    compile libs.gson

    compile libs.retrofit2
    compile libs.retrofit2GsonConverter
    compile libs.retrofit2RxJavaAdapter

    compile libs.sqlbrite

    compile libs.stetho
    compile libs.stetho_okhttp
    compile libs.stetho_jsconsole

    compile libs.calligraphy

    compile 'com.jenzz:materialpreference:1.3'

    compile project(':ExpandableTextView')

}
